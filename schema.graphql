# source: http://localhost:4000/graphql
# timestamp: Tue Jul 20 2021 18:38:56 GMT+0700 (Western Indonesia Time)

type Attribute {
  id: ID
  name: String
  icon: Image
}

type Category {
  id: ID
  name: String
  code: String
  level: Int
  published: Boolean
  icon: Image
}

type Image {
  id: ID
  url: String
  height: Float
  width: Float
  aspectRatio: Float
  bytes: Float
  format: String
  display: Int
}

type Mutation {
  login: String
  addIcon(id: String!, url: String!): String
  createProduct(name: String!, desc: String!, categoryId: String!, ownerId: String!, rentalPeriodUnitId: String!, price: Float!): String
  setProductImage(id: String!, url: String!): String
  setAttributeIcon(id: String!, url: String!): String
  updateDescription(id: String!, desc: String!): String
  addSpec(id: String!, attributeId: String!, value: String!): String
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

type Product {
  id: ID
  name: String
  desc: String
  price: Float
  rentalPeriodUnit: Unit
  category: Category
  published: Boolean
  stock: Int
  images: [Image]
  specs: [Specification]
}

"""A connection to a list of items."""
type ProductConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [ProductEdge]
}

"""An edge in a connection."""
type ProductEdge {
  """The item at the end of the edge"""
  node: Product

  """A cursor for use in pagination"""
  cursor: String!
}

type Query {
  test: ID
  me: User
  attributes: [Attribute]
  categories: [Category]
  category(id: String!): Category
  units: [Unit]
  product(id: String!): Product
  featuredProducts: [Product]
  search(q: String!, categoryId: String, published: Boolean, after: String, first: Int): ProductConnection
}

type Specification {
  id: ID
  attribute: Attribute
  value: String
}

type Subscription {
  test: String
}

type Unit {
  id: ID
  display: String
}

type User {
  id: ID
  name: String
}
